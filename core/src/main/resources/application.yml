server:
  port: 9000

auth0:
  # Replace with the API Identifier for your Auth0 API.
  audience: https://atlas-s.eu.auth0.com/api/v2/

# The following is standard Spring Security OAuth2 configuration.
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          # Replace with the domain of your Auth0 tenant.
          # Note the trailing slash is important!
          issuer-uri: https://atlas-s.eu.auth0.com/
      client:
        registration:
          auth0:
            client-id: WnJyOd4btxmLg93R9VMZnab6vlFOUdbb
            client-secret: YLSVp3B2LOialcKPNlWbCgn9UcBAMyy_5mxykR13ZYq6mgAeeGWEmdloiIYY1Uzh
            scope:
              - openid
              - profile
              - email
        provider:
          auth0:
            # trailing slash is important!
            issuer-uri: https://atlas-s.eu.auth0.com/
  r2dbc:
    # url: r2dbc:postgresql://ec2-34-251-118-151.eu-west-1.compute.amazonaws.com:5432/d8g1sr68qsfuqi
    # password: bd481e7581e264f62651c238e1ab6f7e44da59eab74024ad88bf7aa6693cef5b
    # username: qpsdonwfrqqzcw
    url: r2dbc:postgresql://localhost:5432/atlas_dev
    password: root
    username: atlasdev
    pool:
      enabled: true
      initial-size: 10
      max-idle-time: 1m
      max-size: 30
  flyway:
    url: jdbc:postgresql://localhost:5432/atlas_dev
    password: root
    user: atlasdev


logging:
  level:
    .: INFO
    org.springframework:
      data:
        r2dbc: DEBUG
    core: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"
    file: "%d %p %c{1.} [%t] %m%n"
  file:
    name: logs/atlas.log